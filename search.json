[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WS 25/26 Numerik 0 Notes",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Intro",
    "section": "",
    "text": "1.1 HDNum",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro</span>"
    ]
  },
  {
    "objectID": "intro.html#hdnum",
    "href": "intro.html#hdnum",
    "title": "1  Intro",
    "section": "",
    "text": "1.1.1 add the hdnum repo as a submodule:\ngit submodule add https://parcomp-git.iwr.uni-heidelberg.de/Teaching/hdnum.git hdnum\ngit commit -m \"Add hdnum as submodule\"\ngit push\n\n\n1.1.2 clone a repo that already has submodules\n\nif you clone for the first time:\n\ngit clone --recurse-submodules https://parcomp-git.iwr.uni-heidelberg.de/Teaching/hdnum.git\n\nif you clone first without recurse\n\ngit clone &lt;your-repo-url&gt;\ncd num-notes-ws25\ngit submodule update --init --recursive\n\n\n1.1.3 pulling the updaets in the submodules on another machine\ngit pull\ngit submodule update --init --recursive\n\n\n1.1.4 CMAKE\n\n\n1.1.4.1 1) Repository layout\nnum-notes-ws25/\n├─ _quarto.yml\n├─ code_examples/\n│  ├─ hdnum/                   # submodule (header-only library)\n│  └─ my_solutions/            # your code\n│     ├─ CMakeLists.txt        # top-level for examples\n│     └─ src/\n│        ├─ ch1/\n│        │  ├─ CMakeLists.txt\n│        │  ├─ ch1_ode_demo.cpp\n│        │  └─ ch1_newton_demo.cpp\n│        ├─ ch2/\n│        │  └─ CMakeLists.txt\n│        └─ ...\n└─ .github/workflows/publish.yml\n\n\n1.1.4.2 2) Top-level CMake for examples (code_examples/my_solutions/CMakeLists.txt)\n\nDefines a shared INTERFACE target hdnum_common (provides include paths, optional GMP).\nAdds each chapter as a subdirectory if it exists.\n\ncmake_minimum_required(VERSION 3.16)\nproject(hdnum_examples CXX)\nset(CMAKE_CXX_STANDARD 20)\n\n### (Optional) put all executables under a single bin/ root\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/bin\")\n\n### hdnum include dir (submodule)\nset(HDNUM_DIR \"${CMAKE_CURRENT_LIST_DIR}/../hdnum\")\n\n### Common config shared by all examples\nadd_library(hdnum_common INTERFACE)\ntarget_include_directories(hdnum_common INTERFACE \"${HDNUM_DIR}\")\n\n### Optional: enable GMP support in hdnum\noption(HDNUM_USE_GMP \"Enable GMP in hdnum\" OFF)\nif(HDNUM_USE_GMP)\n  target_compile_definitions(hdnum_common INTERFACE HDNUM_HAS_GMP=1)\n  find_library(GMPXX gmpxx)\n  find_library(GMP   gmp)\n  if(GMPXX AND GMP)\n    target_link_libraries(hdnum_common INTERFACE ${GMPXX} ${GMP})\n  else()\n    message(FATAL_ERROR \"GMP not found; set paths or disable HDNUM_USE_GMP\")\n  endif()\nendif()\n\n### Chapters to include (add/remove as needed)\nset(HDNUM_CHAPTERS ch1 ch2 ch3 ch4 ch5 ch6 ch7 ch8 ch9 ch10)\nforeach(ch IN LISTS HDNUM_CHAPTERS)\n  if(EXISTS \"${CMAKE_CURRENT_LIST_DIR}/src/${ch}/CMakeLists.txt\")\n    add_subdirectory(\"src/${ch}\")\n  endif()\nendforeach()\n\n\n1.1.4.3 3) Per-chapter CMake with per-chapter output folders\n\nEach chapter decides which executables to build.\nPer-chapter runtime output goes to build/bin/&lt;chapter&gt;/ (and per-config subfolders on multi-config generators).\n\n### code_examples/my_solutions/src/ch1/CMakeLists.txt\nset(CHAPTER ch1)\n\n### Per-chapter output folder\nset(OUT_DIR \"${CMAKE_BINARY_DIR}/bin/${CHAPTER}\")\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${OUT_DIR}\")\nforeach(cfg IN ITEMS Debug Release RelWithDebInfo MinSizeRel)\n  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${cfg} \"${OUT_DIR}/${cfg}\")\nendforeach()\n\n### Helper to add ch1 examples\nfunction(add_ch_example name)\n  add_executable(${name} \"${name}.cpp\")\n  target_link_libraries(${name} PRIVATE hdnum_common)\n  # Optional: group in IDEs\n  set_target_properties(${name} PROPERTIES FOLDER \"${CHAPTER}\")\nendfunction()\n\n### List executables in this chapter\nadd_ch_example(ch1_ode_demo)\nadd_ch_example(ch1_newton_demo)\n\nRepeat a similar CMakeLists.txt in src/ch2, src/ch3, … adding that chapter’s .cpp files.\n\n\n\n1.1.4.4 4) Build commands (configure once, then build)\nSingle-config (Linux/Mint, Makefiles/Ninja):\ncd code_examples/my_solutions\n### configure (once per build dir or when options/CMakeLists change)\ncmake -S . -B build -DCMAKE_BUILD_TYPE=Release               # + -DHDNUM_USE_GMP=ON if needed\n### build (repeat as you edit sources)\ncmake --build build -j\nMulti-config (MSVC / Ninja Multi-Config):\ncmake -S . -B build\ncmake --build build --config Release\nOutputs\nbuild/bin/ch1/ch1_ode_demo\nbuild/bin/ch1/ch1_newton_demo\nbuild/bin/ch2/...\n(or build/bin/ch1/Release/... on multi-config generators)\n\n\n1.1.4.5 5) Using GMP (high precision) without editing submodule\n\nInstall dev package: sudo apt install -y libgmp-dev\nEnable once at configure time (persists in the build cache):\ncmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DHDNUM_USE_GMP=ON\nCMake finds and links gmpxx/gmp, and defines HDNUM_HAS_GMP=1 for all examples via hdnum_common.\n\n\nTip: keep two build dirs if you switch often:\ncmake -S . -B build         -DCMAKE_BUILD_TYPE=Release -DHDNUM_USE_GMP=OFF\ncmake -S . -B build-gmp     -DCMAKE_BUILD_TYPE=Release -DHDNUM_USE_GMP=ON\ncmake --build build\ncmake --build build-gmp\n\n\n\n1.1.4.6 6) Troubleshooting quickies\n\nfatal error: hdnum.hh: No such file or directory → HDNUM_DIR wrong; ensure submodule is initialized; include path points at the folder that contains hdnum.hh.\nGMP not found → install libgmp-dev; reconfigure; or pass custom -DCMAKE_LIBRARY_PATH=/path -DCMAKE_INCLUDE_PATH=/path.\nChanging HDNUM_USE_GMP or editing CMakeLists.txt → reconfigure (rerun the cmake -S . -B build ... step). Otherwise just cmake --build build -j.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Intro</span>"
    ]
  }
]